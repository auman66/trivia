{
    "1": {
        "q_id": "recd8qWkc8MIqSFaD",
        "question": "In which version of Python did the async and await keywords get added to the language?\nA. 3.4\nB 3.5\nC 3.6\nD 2.7",
        "answer": "B",
        "correct": "That's correct, Python 3.5 was the version that added async/await to the language.",
        "incorrect": "Sorry, the answer was 3.5",
        "a_media": "",
        "q_media": ""
    },
    "2": {
        "q_id": "recDj3guGPz18VFcz",
        "question": "Who is the creator of Python?\nA. Larry Page\nB. Vint Cerf\nC. Guido van Rossum\nD. Ken Thompson",
        "answer": "C",
        "correct": "That's correct! Guido van Rossum is the creator of Python.",
        "incorrect": "Sorry, the answer was Guido van Rossum.",
        "a_media": "",
        "q_media": ""
    },
    "3": {
        "q_id": "recwggq4vzh5LNHOC",
        "question": "Which of the following is NOT a Python web framework?\nA. Django\nB. Flask\nC. CherryPy\nD. Pandas",
        "answer": "D",
        "correct": "That's correct! Pandas is a Python library for data analysis.",
        "incorrect": "Sorry, the answer was Pandas.",
        "a_media": "",
        "q_media": ""
    },
    "4": {
        "q_id": "recPyEMAGWo0fGqIv",
        "question": "How do you insert comments in Python?\nA. //This is a comment\nB. #This is a comment\nC. /*This is a comment*/\nD. {This is a comment}",
        "answer": "B",
        "correct": "That's correct! Comments start with a # in Python.",
        "incorrect": "Sorry, the answer was #This is a comment.",
        "a_media": "",
        "q_media": ""
    },
    "5": {
        "q_id": "recJqglqYuy20pXHx",
        "question": "Which statement is used to stop a loop?\nA. break\nB. stop\nC. return\nD. exit",
        "answer": "A",
        "correct": "That's correct! To stop a loop, use the statement break.",
        "incorrect": "Sorry, the answer was break.",
        "a_media": "",
        "q_media": ""
    },
    "6": {
        "q_id": "receWpojB7JJ7mhQb",
        "question": "What was the Python programming language named after?\n\nA. The creator's favorite type of snake\nB. A NASA spacecraft prototype\nC. A British comedy troupe\nD. A reference to a previously existing but similar programming language",
        "answer": "C",
        "correct": "That is correct! Python the programming language was named after Monty Python, the British comedy troupe famous for movies such as The Holy Grail.",
        "incorrect": "Sorry, the answer was B, the British comedy troupe Monty Python.",
        "a_media": "",
        "q_media": ""
    },
    "7": {
        "q_id": "rec8Cw3VyX0nyfca2",
        "question": "What inspired the name for the Django web framework?\n\nA. A proficient guitar player\nB. The developers' favorite Quentin Tarantino film\nC. A biologist who did research on pythons\nD. A death metal band",
        "answer": "A",
        "correct": "That is correct! Adrian Holovaty, the developer of the framework, was a big fan of guitar player Django Reinhardt",
        "incorrect": "Sorry, the answer was Django Reinhardt the guitar player.",
        "a_media": "",
        "q_media": ""
    },
    "8": {
        "q_id": "recOnLT1qsgR2P6tu",
        "question": "What does the yield keyword do?\n\nA. Returns unstructured data\nB. Returns a lambda\nC. Stops the program's execution\nD. Returns a generator function",
        "answer": "D",
        "correct": "That is correct! The yield keyword returns a generator function.",
        "incorrect": "Sorry, the answer was that it returns a generator function.",
        "a_media": "",
        "q_media": ""
    },
    "9": {
        "q_id": "recZH4zr5biFKC4M3",
        "question": "What does it typically mean when you see \"**\" in a function definition?\n\nA. Someone is using the exponent operator\nB. Keyword arguments are being unpacked into a dictionary\nC. Function arguments are being unpacked into a tuple\nD. It is a syntax error",
        "answer": "B",
        "correct": "That is correct! ** in a function definition is the unpacking operator for keyword arguments.",
        "incorrect": "Sorry, the answer was keyword arguments.",
        "a_media": "",
        "q_media": ""
    },
    "10": {
        "q_id": "recEDcmQR3z3wyQ3a",
        "question": "Which of these data types are immutable in Python?\n\nA. tuples\nB. lists\nC. dictionaries\nD. sets",
        "answer": "A",
        "correct": "That is correct! Tuples are immutable in Python.",
        "incorrect": "Sorry, the answer was tuples",
        "a_media": "",
        "q_media": ""
    },
    "11": {
        "q_id": "recccHPp4GyWc3ZCK",
        "question": "Which of these databases does the Django web framework's ORM not officially support?\n\nA. PostgreSQL\nB. MariaDB\nC. MongoDB\nD. Oracle",
        "answer": "C",
        "correct": "That is correct! The answer was MongoDB",
        "incorrect": "Sorry, the answer was MongoDB",
        "a_media": "",
        "q_media": ""
    },
    "12": {
        "q_id": "recxIaL2gJAmpSuMC",
        "question": "Which of the following is not included in the \"Zen of Python\"?\n\nA. Explicit is better than implicit.\nB. Now is better than never.\nC. Some special cases are special enough to break the rules.\nD. Namespaces are one honking great idea -- let's do more of those",
        "answer": "C",
        "correct": "That is correct! Special cases are not special enough to break the rules.",
        "incorrect": "Sorry the answer was C. Special cases are not special enough to break the rules!",
        "a_media": "",
        "q_media": ""
    },
    "13": {
        "q_id": "recZoYIIbgulLnmbQ",
        "question": "Which of these web frameworks describes itself as \"batteries included\"?\n\nA. Django\nB. Flask\nC. Sanic\nD. Tornado",
        "answer": "A",
        "correct": "That is correct! The answer is Django",
        "incorrect": "Sorry, the answer was Django",
        "a_media": "",
        "q_media": ""
    },
    "14": {
        "q_id": "rec58CbFjMUFuJ8xn",
        "question": "What does PEP stand for?\n\nA. Python Engineering Protocol\nB. Python Enhancement Proposal\nC. Python Escalation Permission\nD. Python Etiquette Principle",
        "answer": "B",
        "correct": "That is correct! PEP stands for Python Enhancement Proposal",
        "incorrect": "Sorry, the answer was Python Enhancement Proposal",
        "a_media": "",
        "q_media": ""
    },
    "15": {
        "q_id": "recllbQnDsRuZIU1q",
        "question": "What was the name of the sorting algorithm that list.sort() used in Python until the relatively recent update to \"Powersort\" in version 3.10?\n\nA. QuickSort\nB. MergeSort\nC. InsertionSort\nD. TimSort",
        "answer": "D",
        "correct": "That is correct! The answer is TimSort, named after its creator Tim Peters",
        "incorrect": "Sorry, the answer was TimSort, named after its creator Tim Peters",
        "a_media": "",
        "q_media": ""
    },
    "16": {
        "q_id": "recw54NEaHyv4W5c0",
        "question": "Referred to as special methods or magic methods, what other term is colloquially used to refer to methods with leading and trailing double underscores such as __init__ or __iter__?\n\nA. Doublers\nB. Dunders\nC. Dubliners\nD. Underscore functions",
        "answer": "B",
        "correct": "That is correct! The answer is \"dunders\"",
        "incorrect": "Sorry, the answer is \"dunders\"",
        "a_media": "",
        "q_media": ""
    }
}